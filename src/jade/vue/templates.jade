extends ../_internal-template

block vars
  - var activeLink = 'vue';
  - var title = 'Starter App Templates | Framework7 Vue Documentation';

block content
  .docs-wrap
    .docs-nav
      include ../_docs-vue-menu
    .docs-content
      h1 入门应用模板
      p 有三个准备好的模板，使用Framework7和Vue来启动您的app开发。
      h2 Framework7 Vue简单模板
      p 这是没有任何构建器和开发服务器的最简单的静态模板。它在单个HTML文件中提供设置
      p 此模板针对希望开始探索Framework7 + Vue的初学者，而不会被复杂的开发环境所干扰。
      p 对于高级功能（如asset编译，hot-reload和CSS提取），我们建议经验丰富的开发人员使用其他的模板：Framework7 Vue Webpack Template或Framework7 Vue Browserify Template。
      p 从<a href="https://github.com/nolimits4web/Framework7-Vue-Simple-Template" target="_blank">GitHub仓库</a>下载模板或者使用
      pre
        code.bash
          :code
            $ git clone https://github.com/nolimits4web/Framework7-Vue-Simple-Template my-app
      h2 Framework7 Vue Webpack App Template
      p 这是最强大的模板，包括全功能的Framework7 + Vue + Webpack设置与热加载，单文件组件（.vue）支持＆css提取。
      h4 安装
      p 从<a href="https://github.com/nolimits4web/Framework7-Vue-Webpack-Template" target="_blank">GitHub仓库</a>下载模板或者
      pre
        code.bash
          :code
            $ git clone https://github.com/nolimits4web/Framework7-Vue-Webpack-Template my-app
      p 到下载项目文件夹的目录下安装依赖项：
      pre
        code.bash
          :code
            $ npm install
      h4 运行开发环境
      pre
        code.bash
          :code
            $ npm run dev
      p App使用热加载，并在<code>localhost:8080</code>运行服务。
      h4 生产构建
      p 当你的app编写好了，你需要 build it for production:
      pre
        code.bash
          :code
            $ npm run build
      h4 项目结构
      ul
        li <b>src/assets</b> - 静态资源的文件夹 (images)
        li <b>src/components</b> - 自定义.vue组件文件夹
        li <b>src/css</b> - app自定义的CSS样式。 不要忘记在main.js中import他们
        li <b>src/pages</b> - app .vue页面
        li <b>src/main</b>.js - main app file where you include/import all required libs and init app
        li <b>src/routes</b>.js - app routes
        li <b>src/app</b>.vue - main app structure/component
      h2 Framework7 Vue Browserify App Template
      p Another powerful template which includes Framework7 + Vue + Browserify setup with hot-reload, single file components (.vue) support & css extraction.
      h4 Install
      p Download template from its <a href="https://github.com/nolimits4web/Framework7-Vue-Browserify-Template" target="_blank">GitHub repository</a> or
      pre
        code.bash
          :code
            $ git clone https://github.com/nolimits4web/Framework7-Vue-Browserify-Template my-app
      p Go to the downloaded project folder and install dependencies:
      pre
        code.bash
          :code
            $ npm install
      h4 Run development environment
      pre
        code.bash
          :code
            $ npm run dev
      p App will run server with hot reload at <code>localhost:8080</code>
      h4 Build for production
      p When your app is ready you need to build it for production:
      pre
        code.bash
          :code
            $ npm run build
      h4 Project Structure
      ul
        li <b>src/components</b> - folder with custom .vue components
        li <b>src/pages</b> - app .vue pages
        li <b>src/main.js</b> - main app file where you include/import all required libs and init app
        li <b>src/routes.js</b> - app routes
        li <b>src/app.vue</b> - main app structure/component
        li <b>dist/css</b> - app styles, put custom app CSS styles here as well
        li <b>dist/css/build.css</b> - Vue components styles will be extracted here on <code>npm run build</code>
      h2 Framework7 Vue Webpack Cordova App Template
      p This template includes full-featured Framework7 + Vue + Webpack setup with hot-reload, single file components (.vue) support & css extraction with super cordova support.
      h4 Install
      p You can read instructions from its <a href="https://github.com/centrual/cordova-template-framework7-vue-webpack" target="_blank">GitHub repository</a> you can continue reading.
      p This template needs Node Js and Npm. You can find install instructions from <a href="https://nodejs.org/en/" target="_blank">Node Js home page</a>.
      p If you don't have cordova or phonegap please install it with:
      pre
        code.bash
          :code
            $ npm i cordova -g
            or
            $ npm i phonegap -g
      p Now you have NodeJs and Cordova-PhoneGap You can create a project with this template now:
      pre
        code.bash
          :code
            $ cordova create <project_create_dir> [com.example.projectname] [ProjectClassName] --template cordova-template-framework7-vue-webpack
            or
            $ phonegap create <project_create_dir> [com.example.projectname] [ProjectClassName] --template cordova-template-framework7-vue-webpack
      h4 Run Your Code
      p You can run every cordova-phonegap commands. You have one argument for development: -- --live-reload or -- --lr.
      p You can find cordova cli reference from <a href="https://cordova.apache.org/docs/en/latest/reference/cordova-cli/" target="_blank">Cordova Docs</a> or phonegap cli reference from: <a href="http://docs.phonegap.com/getting-started/1-install-phonegap/cli/" target="_blank">Phonegap Docs</a>
      p Sample Commands:
      pre
        code.bash
          :code
            $ cordova (run|emulate) [android|ios|browser] [-- --lr]
            or
            $ phonegap (run|emulate) [android|ios|browser] [-- --lr]
      h4 Build for production
      p When your app is ready you need to build it for production:
      pre
        code.bash
          :code
            $ cordova build --release
            or
            $ phonegap build --release
      p For more information about build: <a href="https://cordova.apache.org/docs/en/latest/guide/platforms/android/index.html" target="_blank">Cordova Android Platform Guide</a>
      h4 Project Structure
      ul
        li <b>src</b> - Source files are here. Mostly your target is this directory.
        li <b>src/assets/static</b> - Your static assets like images, css, fonts, json, js, sass is here.
        li <b>src/assets/static/css</b> - put custom app CSS styles here. Don't forget to import them in main.js
        li <b>src/assets/vue/pages</b> - app .vue pages
        li <b>src/assets/vue/components</b> - folder with custom .vue components
        li <b>src/main.js</b> - main app file where you include/import all required libs and init app
        li <b>src/routes.js</b> - app routes
        li <b>src/main.vue</b> - main app structure/component

      h2 App Framework
      p <b>iOS and Android Apps with HTML & JavaScript - develop, build and deploy - free and open source!</b>
      p Visit the <a href="https://github.com/scriptPilot/app-framework" target="_blank">GitHub repository</a>
      img(src='https://raw.githubusercontent.com/scriptPilot/app-framework/master/media/process.png')
      h3 Features
      h4 Setup your development environment:
      ul
        li Creation of a lightweight and well-organized project folder, ready for GitHub
        li Demo App to use as base for your own application with typical use cases
      h4 Design your application:
      ul
        li Printable template to design your application with paper and pencil
        li Template for your icon design - as PDF for sketching and PPTX for drawing
      h4 Develop your application:
      ul
        li Realize beautiful user interfaces with all well-known components and transitions, based on Framework7
        li Easy to maintain single file components with reusable UI elements
        li One code base for all devices with HTML, CSS and JavaScript - realized with Cordova, supporting ES2015
        li Use comprehensive icon fonts like FontAwesome, Framework7, Ion and Material Icons out of the box
        li Well prepared to use Firebase authentication, realtime database and storage services
        li State kept for history, tabs, scroll positions, focus, panels, modals, form inputs and page component data
        li Offline capability, flexible routing and multi-language support out of the box
      h4 Test your application:
      ul
        li Integrated code check for correctness and automatic fix for standard conformity
        li Local development server with live reload, perfectly to use together with Chrome DevTools
        li Test your application on any iOS or Android device with an emulator or on your own device
        li Use a development Firebase project with automatic database and storage rule update
      h4 Build your application:
      ul
        li Build process with version bump and compression of all HTML, CSS, JavaScript and image files
        li Generation of favicons, touch icons and splash screens out of a single image file
        li Phone frame around your application on big screens, so you can offer desktop access with charm
        li Automatic build as web application, to be used online and offline in the browser
        li Automatic Apple Xcode project build with Cordova
        li Automatic Android Studio project build with Cordova
      h4 Deploy your application:
      ul
        li Deployment without downtime
          ul
            li to any FTP server as Web App
            li to the Firebase Hosting service as Web App
            li to the Apple App Store as native iOS App
            li to the Google Play Store as native Android App
        li Easy rollback solutions
      h4 Backup your application:
      ul
        li Download your Firebase database content and user list to local JSON files
        li Snapshot creation of all important project files to backup on any external drive or cloud service
      h3 Quick start
      ol
        li Install <a href="https://docs.npmjs.com/getting-started/what-is-npm" target="_blank">Node.js with npm</a>
        li Create a <b>package.json</b> file in an empty project folder with the following content:
          pre
            code.bash
              :code
                {
                  "name": "my-app",
                  "version": "1.0.0",
                  "devDependencies": {
                    "app-framework": "*"
                  }
                }
        li Run <code>npm install</code> to install App Framework and setup the project folder
        li Run <code>npm run dev</code> to start the Demo App at localhost:8080
        li Read our <a href="https://github.com/scriptPilot/app-framework/blob/master/DOCUMENTATION.md" target="_blank">Documentation</a>
