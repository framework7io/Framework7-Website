extends ../jade/_internal-template

block vars
  - var activeLink = 'docs';
  - var title = 'Views | Framework7 Documentation';

block content
  .docs-wrap
    .docs-nav
      include ../jade/_docs-menu
    .docs-content
      h1 视图(views)
      p <strong>View</strong> (&lt;div class="view"&gt;) - 在应用中是一个独立的部分，她有自己的设置、页面切换和历史。每一个视图都可以有不同的导航栏、工具栏布局和不同的样式。所以View就像是嵌在应用中的另一个应用。这种功能可以让你来分别操作一个应用中的不同部分。
      p <strong>Views</strong> (&lt;div class="views"&gt;) - 是所有可见View的容器（不包括Modal和Panel）。<strong>Views</strong> 是你的应用主容器。<strong>一个应用中只能有一个 Views</strong>
      p 下面是 Views 的HTML结构：
      pre
        code.
          &lt;body&gt;
            ...
            &lt;div class="panel panel-left panel-cover"&gt;
              &lt;div class="view panel-view"&gt; ... &lt;/div&gt;
            &lt;/div&gt;
            &lt;!-- Views --&gt;
            &lt;div class="views"&gt;
              &lt;!-- Your main view --&gt;
              &lt;div class="view view-main"&gt;
                &lt;!-- Navbar--&gt;
                &lt;!-- Pages --&gt;
                &lt;!-- Toolbar--&gt;
              &lt;/div&gt;
              &lt;!-- Another view --&gt;
              &lt;div class="view another-view"&gt;
                &lt;!-- Navbar--&gt;
                &lt;!-- Pages --&gt;
                &lt;!-- Toolbar--&gt;
              &lt;/div&gt;          
            &lt;/div&gt;
            &lt;div class="popup"&gt;
              &lt;div class="view popup-view"&gt; ... &lt;/div&gt;
            &lt;/div&gt;
            ...
          &lt;/body&gt;

      p <strong>View</strong> 可以放在应用中的任何位置，但是有一个重要的规则 - 所有的可见 View 都应该放在 <strong>Views</strong> (&lt;div class="views"&gt;)中。因为我们会用来做页面切换的动画。
      h2 Main View
      p 主视图会有一个 <strong>view-main</strong> 的class，因为我们会默认把所有的链接加载的页面放进主视图中。 并且，你使用 pushState hash navigation 的时候也是只在主视图中工作。

      h2 初始化View
      p 在我们的HTML中已经有需要的 view，并且应用已经初始化了，现在我们需要在JavaScript中初始化我们的 view。
      p <strong>注意不是所有的view都需要初始化，只有你需要浏览的那些view才需要。</strong>其他的view（比如 popup）不需要初始化，我们仅仅用来正确的布局navbar，pages和toolbars。
      p 在之前的文章中我们把应用初始化的实例存放在 <b>myApp</b> 变量中。
      pre
        code.
          var myApp = new Framework7({
          // ...
          });

      p 这个实例有很多方法可以操作我们的应用，其中一个方法就可以用来初始化View。
      ul.method-parameters.
        <li><span class="parameter">container</span> - <span class="parameter-type">string</span> or <span class="parameter-type">HTMLElement</span>. If string - CSS selector of View element</li>
        <li><span class="parameter">parameters</span> - <span class="parameter-type">object</span>. Object with View parameters</li>
        <li class="method-returns">This method returns object with View instance.</li>
      h3 View initialization parameters
      table.params-table
        thead
          tr
            th Parameter
            th Type
            th Default
            th Description
        tbody
          tr
            td dynamicNavbar
            td boolean
            td false
            td Set to true to enable Dynamic Navbar in this View
          tr
            td url
            td string
            td undefined
            td Default (inital) View's url. If not specified, then it is equal to document url
          tr
            td domCache
            td boolean
            td false
            td If enabled then all previous pages in navigation chain will not removed from DOM when you navigate deeper and deeper. It could be useful, for example, if you have some Form from 5 steps (5 pages) and when you are on last 5th page you need access to form that was on 1st page.
          tr
            td linksView
            td string / HTMLElement
            td undefined
            td CSS Selector of another view or HTMLElement of other view. By defaul all links in initialized (only) view will load pages in this view. You can change this logic on the fly by changing this paremeter. This tell links to load pages in other view.
          tr
            td animatePages
            td boolean
            td 
            td Enable/disable animated transitions between pages for the current View. By default, equal to the same App's parameter. Allows to override global <a href="init-app.html">App parameter</a> for current View.
          tr
            th(colspan="4") Swipe back
          tr
            td swipeBackPage
            td boolean
            td 
            td By default, equal to the same App's parameter. Allows to override global <a href="init-app.html">App parameter</a> for current View
          tr
            td swipeBackPageThreshold
            td number
            td 
            td By default, equal to the same App's parameter. Allows to override global <a href="init-app.html">App parameter</a> for current View
          tr
            td swipeBackPageActiveArea
            td number
            td 
            td By default, equal to the same App's parameter. Allows to override global <a href="init-app.html">App parameter</a> for current View
          tr
            td swipeBackPageBoxShadow
            td boolean
            td 
            td By default, equal to the same App's parameter. Allows to override global <a href="init-app.html">App parameter</a> for current View
          tr
            th(colspan="4") Callbacks
          tr
            td onSwipeBackMove(callbackData)
            td function
            td 
            td Callback function that will be executed during swipe back move. <code>callbackData</code> contains object with the following properties:
              ul
                li <code>percentage</code> - number, swipe back percentage
                li <code>activePage</code> - HTMLElement with currently active page
                li <code>previousPage</code> - HTMLElement with previous (left) page
                li <code>activeNavbar</code> - HTMLElement with currently active navbar (only for Dynamic Navbar)
                li <code>previousNavbar</code> - HTMLElement with previous (left) navbar (only for Dynamic Navbar)
      p 上面列出了我们所有可以用来初始化view的方法。
      pre
        code.
          var myApp = new Framework7({
            // ...
          });   

          /* Initialize views */
          var mainView = myApp.addView('.view-main', {
            dynamicNavbar: true
          })
          var anotherView = myApp.addView('.another-view');
      p 这个例子中我们没有初始化在 panel 和 popup 中的view，因为我们不需浏览他们。但是如果你需要浏览这些，你就需要初始化他们。
      h2 View 的方法和属性
      p 就像上面的例子一样，我们初始化 view 之后，会把他们的实例存储在变量 <code>mainView</code> 和 <code>anotherView</code> 中。View 实例有很多有用的方法可以用来操作自身。下面我们以 <code>mainView</code> 为例来看看这些方法和参数。
      table.methods-table
        tbody
          tr
            th(colspan="2") Properties
          tr
            td mainView.params
            td Returns object with intialized parameters. You can access and rewrite some parameters like <code>mainView.params.linksView = '.another-view'</code>
          tr
            td mainView.history
            td Returns array with View's history. Each array element contains URL of loaded page</code>
          tr
            td mainView.contentCache
            td Returns object with cached pages. It is available only if you use dynamically generated content
          tr
            td mainView.url
            td Returns string with url of currently active (loaded) page
          tr
            td mainView.pagesContainer
            td Returns HTMLElement link to pages element
          tr
            td mainView.activePage
            td Contains object with <a href="pages.html#page-data">Page Data</a> of currently active page
          tr
            td mainView.main
            td Returns true if this view is main view
          tr
            th(colspan="2") Methods
          tr
            td(rowspan="2").method mainView.loadPage(<span>url</span>, <span>animatePages</span>)
            td 
              ul.method-parameters
                li
                  span.parameter url
                  |  - <span class="parameter-type">string</span>. URL of page to load
                li
                  span.parameter animatePages
                  |  - <span class="parameter-type">boolean</span>. Oprional. Set to false/true to disable/enable animated page transitions for this page
          tr
            td This method will load required page to view. In other word will do the same if you click on some link with this URL


          tr
            td(rowspan="2").method mainView.loadContent(<span>content</span>, <span>animatePages</span>)
            td 
              ul.method-parameters
                li
                  span.parameter content
                  |  - <span class="parameter-type">string</span> or <span class="parameter-type">HTMLElement</span> or <span class="parameter-type">[jQuery/Zepto/DOM7 collection]</span> or <span class="parameter-type">[array of HTMLElement]</span>. 
                li
                  span.parameter animatePages
                  |  - <span class="parameter-type">boolean</span>. Oprional. Set to false/true to disable/enable animated page transitions for this page
          tr
            td This method allows to load dynamically generated content as a new usual page.
          tr
            td(rowspan="2").method mainView.goBack(<span>url</span>, <span>animatePages</span>)
            td 
              ul.method-parameters
                li
                  span.parameter url
                  |  - <span class="parameter-type">string</span>. URL of page to get back. URL will be ignored if there are pages in navigation history.
                li
                  span.parameter animatePages
                  |  - <span class="parameter-type">boolean</span>. Oprional. Set to false/true to disable/enable animated page transitions for this page
          tr
            td This method will trigger reverse animation to the previous page. In other word will do the same if you click on "back"
          
          tr
            td mainView.hideNavbar()
            td Hide navbar in this View
          tr
            td mainView.showNavbar()
            td Show navbar in this View
          tr
            td mainView.hideToolbar()
            td Hide toolbar in this View
          tr
            td mainView.showToolbar()
            td Show toolbar in this View
          tr
            td mainView.destroy()
            td Destroy initialized View, detach swipe events, and disable navigation
      h3 View 默认的链接
      p 如果你觉得Framework7由于某些原因探测出了错误的View链接（用在浏览历史中的），或者你想设置不同的View默认链接，你可以通过在View元素上设置 <code>data-url</code> 属性或者在初始化view时设置 <code>url</code> 参数。 
      pre
        code.
          &lt;div class="view" data-url="index2.html"&gt;
      h3 通过其他方式来访问View实例
      p Framework7 有一个属性存储了所有的view对应的DOM元素，我们可以随时通过JS来访问。
      pre
        code.
          var viewsElement = $$('.view-main')[0];
          var viewInstance = viewsElement.f7View;
      p 当然，所有的view实例也都存储在一个属性 <code>views</code> 中，比如我们可以这样找到 main view:
      pre
        code.
          for (var i = 0; i < myApp.views.length; i ++) {
            var view = myApp.views[i];
            if (view.main) myApp.alert('I found main View!')
          }
      h2 下一步
      p <a href="pages.html">Pages</a>
