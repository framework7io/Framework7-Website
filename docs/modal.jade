extends ../jade/_internal-template

block vars
  - var activeLink = 'docs';
  - var title = 'Modal | Framework7 Documentation';

block content
  .docs-demo-device
    iframe(width="320", height="548", frameborder="0", scrolling="on")
    .fade-overlay
  .docs-wrap
    .docs-nav
      include ../jade/_docs-menu
    .docs-content.with-device
      .full-width
        h1 Modal
        p Modal 是从App的主要内容区域上弹出的一小块内容块. Modals经常被用来向用户询问信息，或通知或警告用户。 Modal和其他所有的遮罩图层一样，是所谓的“临时视图”的一部分。
        p Modals 可以只用JavaScript打开。所以让我们来看看使用modals的相关APP方法 
        h2 预定义的 Modals
        .important-note
          ul
            li
              p 注意，如果你没有指定预定义的model标题，它讲使用默认的标题("Framework7")，这个可以在<a href="init-app.html">App 初始化</a>时，通过传递 <strong>modalTitle</strong> 参数改变。  
            li 
              p 预定义modals的按钮文本(如 "Ok" 和 "Cancel") 也可以在 <a href="init-app.html">App 初始化</a>时，通过传递 <strong>modalButtonOk</strong> 和 <strong>modalButtonCancel</strong> 参数改变。
        p First of all, let's look on most used and already predefined modals in Framework7:
      h3(data-device-preview="../docs-demos/modal-alert.html") Alert
      p 我们需要调用以下任一一种App方法来打开Alert modal ：
        span.method myApp.alert(<span>text, [title, callbackOk]</span>)</span>
        br
        | or 
        br
        span.method myApp.alert(<span>text, [callbackOk]</span>)</span>
      ul.method-parameters
        li
          span.parameter text
          |  - <span class="parameter-type">string</span>. Alert文本
        li
          span.parameter title
          |  - <span class="parameter-type">string</span>. Optional. Alert modal 标题
        li
          span.parameter callbackOk
          |  - <span class="parameter-type">function</span>. Optional.在Alert modal下，当用户点击“Ok”按钮时，回调函数将被执行。
        li.method-returns 该方法返回动态创建的modal的HTML元素。
      pre
        code
          | &lt;body&gt;
          |   ...
          |   &lt;div class="page-content"&gt;
          |     &lt;div class="content-block"&gt;
          |       &lt;p&gt;&lt;a href="#" class="alert-text"&gt;Alert With Text&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="alert-text-title"&gt;Alert With Text and Title&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="alert-text-title-callback"&gt;Alert With Text and Title and Callback&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="alert-text-callback"&gt;Alert With Text and Callback&lt;/a&gt;&lt;/p&gt;
          |     &lt;/div&gt;
          |   &lt;/div&gt;
          |   ...
          | &lt;/body&gt;          
      pre
        code
          | var myApp = new Framework7();
          | 
          | var $$ = Dom7;
          | 
          | $$('.alert-text').on('click', function () {
          |     myApp.alert('Here goes alert text');
          | });
          | 
          | $$('.alert-text-title').on('click', function () {
          |     myApp.alert('Here goes alert text', 'Custom Title!');
          | });
          | 
          | $$('.alert-text-title-callback').on('click', function () {
          |     myApp.alert('Here goes alert text', 'Custom Title!', function () {
          |         myApp.alert('Button clicked!')
          |     });
          | });
          | 
          | $$('.alert-text-callback').on('click', function () {
          |     myApp.alert('Here goes alert text', function () {
          |         myApp.alert('Button clicked!')
          |     });
          | });
      h3(data-device-preview="../docs-demos/modal-confirm.html") Confirm
      p Confirm modal 经常在需要确认一些行为时被使用. 打开Alert modal同样也需要调用以下任一一种App方法：
      p
        span.method myApp.confirm(<span>text, [title, callbackOk, callbackCancel]</span>)</span>
        br
        | or 
        br
        span.method myApp.confirm(<span>text, [callbackOk, callbackCancel]</span>)</span>
      ul.method-parameters
        li
          span.parameter text
          |  - <span class="parameter-type">string</span>. Confirm 文本
        li
          span.parameter title
          |  - <span class="parameter-type">string</span>. Optional. Confirm modal 标题 
        li
          span.parameter callbackOk
          |  - <span class="parameter-type">function</span>. Optional. 在 Confirm modal下，当用户点击“Ok”按钮时，回调函数将被执行。(当用户确认操作）
        li
          span.parameter callbackCancel
          |  - <span class="parameter-type">function</span>. Optional. 在 Confirm modal下，当用户点击“Cancel”按钮时，回调函数将被执行。(当用户不想进行操作)
          
        li.method-returns 该方法返回动态创建的modal的HTML元素。
      pre
        code
          | &lt;body&gt;
          |   ...
          |   &lt;div class="page-content"&gt;
          |     &lt;div class="content-block"&gt;
          |       &lt;p&gt;&lt;a href="#" class="confirm-ok"&gt;Confirm with text and Ok callback&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="confirm-ok-cancel"&gt;Confirm with text, Ok and Cancel callbacks&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="confirm-title-ok"&gt;Confirm with text, title and Ok callback&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="confirm-title-ok-cancel"&gt;Confirm with text, title, Ok and Cancel callback&lt;/a&gt;&lt;/p&gt;
          |     &lt;/div&gt;
          |   &lt;/div&gt;
          |   ...
          | &lt;/body&gt;            
      pre
        code
          | $$('.confirm-ok').on('click', function () {
          |     myApp.confirm('Are you sure?', function () {
          |         myApp.alert('You clicked Ok button');
          |     });
          | });
          | 
          | $$('.confirm-ok-cancel').on('click', function () {
          |     myApp.confirm('Are you sure?', 
          |       function () {
          |         myApp.alert('You clicked Ok button');
          |       },
          |       function () {
          |         myApp.alert('You clicked Cancel button');
          |       }
          |     );
          | });
          | $$('.confirm-title-ok').on('click', function () {
          |     myApp.confirm('Are you sure?', 'Custom Title', function () {
          |         myApp.alert('You clicked Ok button');
          |     });
          | });
          | $$('.confirm-title-ok-cancel').on('click', function () {
          |     myApp.confirm('Are you sure?', 'Custom Title', 
          |       function () {
          |         myApp.alert('You clicked Ok button');
          |       },
          |       function () {
          |         myApp.alert('You clicked Cancel button');
          |       }
          |     );
          | });            
      h3(data-device-preview="../docs-demos/modal-prompt.html") Prompt
      p Prompt modal 经常在需要从用户那里得到一些数据/答案时使用。打开 Prompt modal同样也需要调用以下任一一种App方法：
      p
        span.method myApp.prompt(<span>text, [title, callbackOk, callbackCancel]</span>)</span>
        br
        | or 
        br
        span.method myApp.prompt(<span>text, [callbackOk, callbackCancel]</span>)</span>
      ul.method-parameters
        li
          span.parameter text
          |  - <span class="parameter-type">string</span>. Prompt 文本/问题
        li
          span.parameter title
          |  - <span class="parameter-type">string</span>. Optional. Prompt modal 标题 
        li
          span.parameter callbackOk
          |  - <span class="parameter-type">function</span>. Optional. 在 Prompt modal下，当用户点击“Ok”按钮时，回调函数将被执行。<strong>方法接收文本输入框里的值作为一个参数</strong>
        li
          span.parameter callbackCancel
          |  - <span class="parameter-type">function</span>. Optional. 在 Prompt modal下，当用户点击“Cancel”按钮时，回调函数将被执行。<strong>方法接收文本输入框里的值作为一个参数</strong>
          
        li.method-returns 该方法返回动态创建的modal的HTML元素。
      pre
        code
          | &lt;body&gt;
          |   ...
          |   &lt;div class="page-content"&gt;
          |     &lt;div class="content-block"&gt;
          |       &lt;p&gt;&lt;a href="#" class="prompt-ok"&gt;Prompt with text and Ok callback&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="prompt-ok-cancel"&gt;Prompt with text, Ok and Cancel callbacks&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="prompt-title-ok"&gt;Prompt with text, title and Ok callback&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="prompt-title-ok-cancel"&gt;Prompt with text, title, Ok and Cancel callback&lt;/a&gt;&lt;/p&gt;
          |     &lt;/div&gt;
          |   &lt;/div&gt;
          |   ...
          | &lt;/body&gt;  
      pre
        code          
          | $$('.prompt-ok').on('click', function () {
          |     myApp.prompt('What is your name?', function (value) {
          |         myApp.alert('Your name is "' + value + '". You clicked Ok button');
          |     });
          | });
          | 
          | $$('.prompt-ok-cancel').on('click', function () {
          |     myApp.prompt('What is your name?', 
          |       function (value) {
          |         myApp.alert('Your name is "' + value + '". You clicked Ok button');
          |       },
          |       function (value) {
          |         myApp.alert('Your name is "' + value + '". You clicked Cancel button');
          |       }
          |     );
          | });
          | $$('.prompt-title-ok').on('click', function () {
          |     myApp.prompt('What is your name?', 'Custom Title', function (value) {
          |         myApp.alert('Your name is "' + value + '". You clicked Ok button');
          |     });
          | });
          | $$('.prompt-title-ok-cancel').on('click', function () {
          |     myApp.prompt('What is your name?', 'Custom Title', 
          |       function (value) {
          |         myApp.alert('Your name is "' + value + '". You clicked Ok button');
          |       },
          |       function (value) {
          |         myApp.alert('Your name is "' + value + '". You clicked Cancel button');
          |       }
          |     );
          | });          
      h3(data-device-preview="../docs-demos/modal-login-password.html") Login and Password
      p 有两个用来验证的特殊modals :
      p
        span.method myApp.modalLogin(<span>text, [title, callbackOk, callbackCancel]</span>)</span>
        br
        | or 
        br
        span.method myApp.modalLogin(<span>text, [callbackOk, callbackCancel]</span>)</span>
      
      
      ul.method-parameters
        li
          span.parameter text
          |  - <span class="parameter-type">string</span>. Modal 文本
        li
          span.parameter title
          |  - <span class="parameter-type">string</span>. Optional. Modal 标题 
        li
          span.parameter callbackOk
          |  - <span class="parameter-type">function</span>.  Optional. 用户点击“Ok”按钮时，回调函数将被执行。 <strong>用户名和密码作为参数被方法接收</strong>
        li
          span.parameter callbackCancel
          |  - <span class="parameter-type">function</span>. Optional. 当用户点击“Cancel”按钮时，回调函数将被执行。 <strong>用户名和密码作为参数被方法接收</strong>
          
        li.method-returns 该方法返回动态创建的modal的HTML元素。
      p
        span.method myApp.modalPassword(<span>text, [title, callbackOk, callbackCancel]</span>)</span>
        br
        | or 
        br
        span.method myApp.modalPassword(<span>text, [callbackOk, callbackCancel]</span>)</span>
      ul.method-parameters
        li
          span.parameter text
          |  - <span class="parameter-type">string</span>. Modal 文本
        li
          span.parameter title
          |  - <span class="parameter-type">string</span>. Optional. Modal 标题 
        li
          span.parameter callbackOk
          |  - <span class="parameter-type">function</span>. Optional. 用户点击“Ok”按钮时，回调函数将被执行。 <strong>密码作为参数被方法接收</strong>
        li
          span.parameter callbackCancel
          |  - <span class="parameter-type">function</span>. Optional. 当用户点击“Cancel”按钮时，回调函数将被执行。 <strong>密码作为参数被方法接收</strong>
      pre
        code
          | &lt;div class="page-content"&gt;
          |   &lt;div class="content-block"&gt;
          |     &lt;p&gt;&lt;a href="#" class="login-modal"&gt;Login Modal&lt;/a&gt;&lt;/p&gt;
          |     &lt;p&gt;&lt;a href="#" class="password-modal"&gt;Password Modal&lt;/a&gt;&lt;/p&gt;
          |   &lt;/div&gt;
          | &lt;/div&gt;  
      pre
        code
          | var myApp = new Framework7();
          | 
          | var $$ = Dom7;
          | 
          | $$('.login-modal').on('click', function () {
          |     myApp.modalLogin('Authentication required', function (username, password) {
          |         myApp.alert('Thank you! Username: ' + username + ', Password: ' + password);
          |     });
          | });
          | 
          | $$('.password-modal').on('click', function () {
          |     myApp.modalPassword('You password please:', function (password) {
          |         myApp.alert('Thank you! Your password is: ' + password);
          |     });
          | });        
      h3(data-device-preview="../docs-demos/modal-nest.html") Nesting Modals
      p 当然,您可能已经注意到,你在任何其他回调函数中“nest”这个modals
      pre
        code
          | &lt;body&gt;
          |   ...
          |   &lt;div class="page-content"&gt;
          |     &lt;div class="content-block"&gt;
          |       &lt;p&gt;&lt;a href="#" class="name"&gt;What is your name?&lt;/a&gt;&lt;/p&gt;
          |     &lt;/div&gt;
          |   &lt;/div&gt;
          |   ...
          | &lt;/body&gt; 
      pre
        code
          | $$('.name').on('click', function () {
          |     myApp.prompt('What is your name?', function (value) {
          |         myApp.confirm('Are you sure that your name is ' + value + '?', function () {
          |             myApp.alert('Ok, your name is "' + value + '"!');
          |         });
          |     });
          | });
      h3(data-device-preview="../docs-demos/modal-preloader.html") Preloader Modal
      p Preloader Modal 用来提示一些后台活动（像Ajax请求）和阻止在这个活动期间的任何用户操作。 打开 Preloader modal 我们也需要调用适当的App方法:
      p
        span.method myApp.showPreloader(<span>[title]</span>)</span> - 显示 Preloader modal
      ul.method-parameters
        li
          span.parameter title
          |  - <span class="parameter-type">string</span>. Optional. Preloader modal 标题. 默认（没有指定）的时候，它等同于 "Loading...". 你可以在App初始化时通过  <strong>modalPreloaderTitle</strong> 参数改变默认的 Preloader 标题。
        li.method-returns 该方法返回动态创建的modal的HTML元素。
      p
        span.method myApp.hidePreloader()</span> - 隐藏/关闭 Preloader modal. 因为 Preloader modal 没有任何按钮, 它应该用 JavaScript 来关闭
      pre
        code
          | &lt;body&gt;
          |   ...
          |   &lt;div class="page-content"&gt;
          |     &lt;div class="content-block"&gt;
          |       &lt;p&gt;&lt;a href="#" class="open-preloader"&gt;Open Preloader&lt;/a&gt;&lt;/p&gt;
          |       &lt;p&gt;&lt;a href="#" class="open-preloader-title"&gt;Open Preloader with custom title&lt;/a&gt;&lt;/p&gt;
          |     &lt;/div&gt;
          |   &lt;/div&gt;
          |   ...
          | &lt;/body&gt;          
      pre
        code
          | $$('.open-preloader').on('click', function () {
          |     myApp.showPreloader();
          |     setTimeout(function () {
          |         myApp.hidePreloader();
          |     }, 2000);
          | });
          | $$('.open-preloader-title').on('click', function () {
          |     myApp.showPreloader('Custom Title')
          |     setTimeout(function () {
          |         myApp.hidePreloader();
          |     }, 2000);
          | });          
      
      h3(data-device-preview="../docs-demos/modal-indicator.html") Indicator（指示器）
      p 如果你不需要用像Preloader Modal这样如此大的modal 窗口去指示活动, 你可以使用简单并且小的indicator modal:
      p
        span.method myApp.showIndicator()</span> - 显示 Indicator modal
      p
        span.method myApp.hideIndicator()</span> - 隐藏/关闭 Indicator modal. 因为Indicator modal没有任何按钮, 它需要用JavaScript来关闭
      pre
        code
          | &lt;body&gt;
          |   ...
          |   &lt;div class="page-content"&gt;
          |     &lt;div class="content-block"&gt;
          |       &lt;p&gt;&lt;a href="#" class="open-indicator"&gt;Open Indicator&lt;/a&gt;&lt;/p&gt;
          |     &lt;/div&gt;
          |   &lt;/div&gt;
          |   ...
          | &lt;/body&gt;          
      pre
        code
          | $$('.open-indicator').on('click', function () {
          |     myApp.showIndicator();
          |     setTimeout(function () {
          |         myApp.hideIndicator();
          |     }, 2000);
          | });

      .full-width.stop-scroll-device
        h2 Custom Modals
        p Ok, 所有的预定义modals都指示特殊情况下（如快捷键）的完整的 Modal 方法. 让我们看看如何创建 custom modals:
        p
          span.method myApp.modal(<span>parameters</span>)</span> - 显示 custom modal
        ul.method-parameters
          li
            span.parameter parameters
            |  - <span class="parameter-type">object</span>. Modal 的 parameters/options对象
          li.method-returns 该方法返回动态创建的modal的HTML元素。
        p 这里有 Modal 的参数列表:
        table.params-table
          thead
            tr
              th Parameter（参数）
              th Type（类型）
              th Default（默认值）
              th Description（描述）
          tbody
            tr
              td title
              td string
              td 
              td 可选. Modal 标题 (可以是html字符串)
            tr
              td text
              td string
              td 
              td 可选. Modal 文本 (可以是html字符串)
            tr
              td afterText
              td string
              td 
              td 可选. 将被放在"text"后的文本 (可以是html字符串)
            tr
              td buttons
              td array
              td 
              td 可选. 按钮数组. 每个按钮应该被表示为带按钮参数的对象 (看下面)
            tr
              td onClick
              td function
              td 
              td 可选. 回调函数将在用户点击任何Modal按钮后被触发执行. 它接收 <b>modal</b> (Modal的 HTML元素) 和 <b>index</b>作为参数 (被点击按钮的索引号)
            
        p 让我们一起来看看按钮参数:
        table.params-table
          thead
            tr
              th Parameter（参数）
              th Type（类型）
              th Default（默认值）
              th Description（描述）
          tbody
            tr
              td text
              td string
              td 
              td 按钮文本 (可以是 HTML 字符串)
            tr
              td bold
              td boolean
              td false
              td 可选. 设置为true会加粗按钮文本
            tr
              td close
              td boolean
              td true
              td 可选. 如果是“true”，点击这个按钮后modal会被关闭
            tr
              td onClick
              td function
              td 
              td 可选. 用户点击这个按钮后，回调函数会被执行

        p 这样的配置选项允许我们创建灵活的modals。让我们来看一些例子：
        .docs-demo-device.docs-inline-device
          iframe(width="320", height="548", frameborder="0", scrolling="on", src="../docs-demos/modal-custom.html")
        pre
          code
            | &lt;body&gt;
            |   ...
            |   &lt;div class="page-content"&gt;
            |     &lt;div class="content-block"&gt;
            |       &lt;p&gt;&lt;a href="#" class="open-3-modal"&gt;Modal With 3 Buttons&lt;/a&gt;&lt;/p&gt;
            |       &lt;p&gt;&lt;a href="#" class="open-slider-modal"&gt;Modal With Slider&lt;/a&gt;&lt;/p&gt;
            |       &lt;p&gt;&lt;a href="#" class="open-tabs-modal"&gt;Modal With Tabs&lt;/a&gt;&lt;/p&gt;
            |     &lt;/div&gt;
            |   &lt;/div&gt;
            |   ...
            | &lt;/body&gt;  
        pre
          code
            | $$('.open-3-modal').on('click', function () {
            |   myApp.modal({
            |     title:  'Modal with 3 buttons',
            |     text: 'Vivamus feugiat diam velit. Maecenas aliquet egestas lacus, eget pretium massa mattis non. Donec volutpat euismod nisl in posuere. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae',
            |     buttons: [
            |       {
            |         text: 'B1',
            |         onClick: function() {
            |           myApp.alert('You clicked first button!')
            |         }
            |       },
            |       {
            |         text: 'B2',
            |         onClick: function() {
            |           myApp.alert('You clicked second button!')
            |         }
            |       },
            |       {
            |         text: 'B3',
            |         bold: true,
            |         onClick: function() {
            |           myApp.alert('You clicked third button!')
            |         }
            |       },
            |     ]
            |   })
            | });
            | $$('.open-slider-modal').on('click', function () {
            |   var modal = myApp.modal({
            |     title: 'Awesome Photos?',
            |     text: 'What do you think about my photos?',
            |     afterText:  '&lt;div class="slider-container" style="width: auto; margin:5px -15px"&gt;'+
            |                   '&lt;div class="slider-pagination"&gt;&lt;/div&gt;'+
            |                   '&lt;div class="slider-wrapper"&gt;'+
            |                     '&lt;div class="slider-slide"&gt;&lt;img src="http://hhhhold.com/270x150/jpg?1" height="150"&gt;&lt;/div&gt;' +
            |                     '&lt;div class="slider-slide"&gt;&lt;img src="http://hhhhold.com/270x150/jpg?2"&gt;&lt;/div&gt;'+
            |                   '&lt;/div&gt;'+
            |                 '&lt;/div&gt;',
            |     buttons: [
            |       {
            |         text: 'Bad :('
            |       },
            |       {
            |         text: 'Awesome!',
            |         bold: true,
            |         onClick: function () {
            |           myApp.alert('Thanks! I know you like it!')
            |         }
            |       },
            |     ]
            |   })
            |   myApp.slider($$(modal).find('.slider-container'), {pagination: '.slider-pagination'});
            | });
            | 
            | $$('.open-tabs-modal').on('click', function () {
            |   myApp.modal({
            |     title:  '&lt;div class="buttons-row"&gt;'+
            |               '&lt;a href="#tab1" class="button active tab-link"&gt;Tab 1&lt;/a&gt;'+
            |               '&lt;a href="#tab2" class="button tab-link"&gt;Tab 2&lt;/a&gt;'+
            |             '&lt;/div&gt;',
            |     text: '&lt;div class="tabs"&gt;'+
            |             '&lt;div class="tab active" id="tab1"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam convallis nunc non dolor euismod feugiat. Sed at sapien nisl. Ut et tincidunt metus. Suspendisse nec risus vel sapien placerat tincidunt. Nunc pulvinar urna tortor.&lt;/div&gt;'+
            |             '&lt;div class="tab" id="tab2"&gt;Vivamus feugiat diam velit. Maecenas aliquet egestas lacus, eget pretium massa mattis non. Donec volutpat euismod nisl in posuere. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae&lt;/div&gt;'+
            |           '&lt;/div&gt;',
            |     buttons: [
            |       {
            |         text: 'Ok, got it',
            |         bold: true
            |       },
            |     ]
            |   })
            | });


        h2 用 JavaScript 关闭 Modals 
        p 任何 Modal 可以用 JavaScript 来关闭，不仅仅是通过点击按钮。因此我们需要看看相关App方法：
        p
          span.method myApp.closeModal(<span>modal</span>)</span> - 关闭任意 modal
        ul.method-parameters
          li
            span.parameter modal
            |  - <span class="parameter-type">HTMLElement</span> or <span class="parameter-type">string</span> ( CSS 选择器). 可选. 除了指定的，任何被打开modal都将被关闭。
        h2 Modal 事件
        p 当你在 Modal 打开/关闭时，需要用JavaScript做一些操作时，Modal 事件非常有用
        table.events-table
          thead
            tr
              th Event（事件）
              th Target（目标）
              th Description（描述）
          tbody
            tr
              td open
              td Modal Element<span>&lt;div class="modal"&gt;</span>
              td 当 Modal 开始打开动画时，事件将被触发。
            tr
              td opened
              td Modal Element<span>&lt;div class="modal"&gt;</span>
              td 当 Modal 完成打开动画时，事件将被触发。
            tr
              td close
              td Modal Element<span>&lt;div class="modal"&gt;</span>
              td 当 Modal 开始结束动画时，事件将被触发。
            tr
              td closed
              td Modal Element<span>&lt;div class="modal"&gt;</span>
              td 当 Modal 完成结束动画后，事件将被触发。


