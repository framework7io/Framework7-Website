extends ../jade/_internal-template

block vars
  - var activeLink = 'docs';
  - var title = 'Initialize App | Framework7 Documentation';

block content
  .docs-wrap
    .docs-nav
      include ../jade/_docs-menu
    .docs-content
      h1 初始化应用
      p 你已经有了基本的页面布局和需要用的CSS以及JS文件。现在我们需要初始化我们的应用，比如在 <code>my-app.js</code>中
      pre.
        <code>var myApp = new Framework7();</code>
      p 上面这个例子中我们使用了 <code>myApp</code> 作为变量名存储 Framework7 初始化之后的实例。
      p 这样初始化非常简单，但是Framework7 也提供了更多个性化的定制，只需要在初始化的时候传入一个配置对象即可。
      pre
        code.
          var myApp = new Framework7({
              pushState: true,
              swipePanel: 'left',
              // ... other parameters
          });
      p 下面是这个变量的列表：
      table.params-table
        thead
          tr
            th Parameter
            th Type
            th Default
            th Description
        tbody
          tr
            th(colspan="4") Caching
          tr
            td cache
            td boolean
            td true
            td As Framework7 uses Ajax to load HTML content for pages it is good to use caching, especially if your content in those pages updates not very often.
          tr
            td cacheDuration
            td number
            td 1000*60*10
            td Duration in ms (milliseconds) while app will use cache instead of loading page with another Ajax request. By default it takes 10 minutes.
          tr
            td cacheIgnore
            td array
            td []
            td Array of URLs (string) that should not be cached by Framework7
          tr
            td cacheIgnoreGetParameters
            td boolean
            td false
            td If "true" then URLs like "about.html?id=2" and "about.html?id=3" will be treated and cached like single "about.html" page
          tr
            th(colspan="4") Fast clicks library
          tr
            td fastClicks
            td boolean
            td true
            td Fast clicks is a built-in library that removes 300ms delay from links and form elements in mobile browser while you click them. You can disable this built-in library if you want to use other third party fast clicks script.
          tr
            th(colspan="4") Navigation
          tr
            td ajaxLinks
            td string
            td undefined
            td By default (when this parameter is not specified) Framework7 will load all links (&lt;a&gt;) using Ajax. You can change this behavior by passing here CSS selector string for links that should be loaded with Ajax, like <code>"a.ajax"</code> - only all links with "ajax" class
          
          tr
            td externalLinks
            td array
            td ['external']
            td Array of class names and "rel" attributes for links that should be treated as external and shouldn't be handled by Framework7. For example such ['external'] value will match to links like &lt;a href="somepage.html" class="external"&gt; and &lt;a href="somepage.html" rel="external"&gt;
          tr
            td animateNavBackIcon
            td boolean
            td false
            td This option (when enabled) gives more native look for dynamic navbar left back-link icon animation. Useful only when you use dynamic navbar with default back-link icon on left side set as "sliding".
          tr 
            td animatePages
            td boolean
            td true
            td Set to false if you want to disable animated transitions between pages
          tr
            td preloadPreviousPage
            td boolean
            td true
            td Enable/disable preloading of previous page when you go deep in navigation. Should be enabled for correct work of "swipe back page" feature.
          tr
            th(colspan="4") Push State
          tr
            td pushState
            td boolean
            td false
            td If you develop web app (not PhoneGap or Home Screen web app) it is useful to enable hash navigation (browser url will look like "http://my-webapp.com/#/about.html"). User as well will be able to navigate through app's history by using browser's default back and forward buttons. 
          tr
            td pushStateSeparator
            td string
            td '#!/'
            td Push state URL separator, can be changed for something like '#page/' and then your push state urls will look like "http://myapp.com/#page/about.html"
          tr
            td pushStateRoot
            td string
            td undefined
            td Push state root URL separator, for example "http://my-app.com/". It is useful only in case when you use empty ("") pushStateSeparator 
          tr
            td pushStateNoAnimation
            td boolean
            td false
            td If false then it will inherit View's animatePages parameter. If true, then push state navigation will happen without animation (page transitions)
          
          tr
            th(colspan="4") Swipe back
          tr
            td swipeBackPage
            td boolean
            td true
            td Enable/disable ability to swipe back from left edge of screen to get to the previous page.
          tr
            td swipeBackPageThreshold
            td number
            td 0
            td Value in px. Swipe back action will start if "touch distance" will be more than this value.
          tr
            td swipeBackPageActiveArea
            td number
            td 30
            td Value in px. Width of invisible left edge of the screen that triggers swipe back action
          tr
            td swipeBackPageBoxShadow
            td boolean
            td true
            td Enable/disable box-shadow animation during swipe back action. You can disable it to improve performance
          tr
            th(colspan="4") Sortable Lists
          tr
            td sortable
            td boolean
            td true
            td If you don't use sortable lists you can disable it for potentially better performance.
          tr
            th(colspan="4") Swipeout
          tr
            td swipeout
            td boolean
            td true
            td If you don't use swipeouts you can disable this feature for potentially better performance.
          tr
            td swipeoutNoFollow
            td boolean
            td false
            td Fallback option for potentially better performance on old/slow devices. If you enable it, then swipeout item will not follow your finger during touch, it will be automatically opened/closed on swipe left/right. 
          tr
            th(colspan="4") Side Panels
          tr
            td swipePanel
            td string
            td false
            td Disabled by default. If you want to enable ability to open side panels with swipe you can pass here "left" (for left panel) or "right" (for right panel).
          tr
            td swipePanelCloseOpposite
            td boolean
            td true
            td This parameter gives ability to close opposite panel by swipe. For example, if your swipePanel is "left", then you could close "right" panel also with swipe.
          tr
            td swipePanelActiveArea
            td number
            td false
            td Value in px. Width of invisible edge from the screen that triggers swipe panel
          tr
            td swipePanelNoFollow
            td boolean
            td false
            td Fallback option for potentially better performance on old/slow devices. If you enable it, then side panel will not follow your finger during touch, it will be automatically opened/closed on swipe left/right.
          tr
            td swipePanelThreshold
            td number
            td 0
            td Value in px. Panel will not move with swipe if "touch distance" will be less than this value.
          tr
            td panelsCloseByOutside
            td boolean
            td true
            td Enable/disable ability to close panel by clicking outside of panel (on panel's  overlay)
          tr
            td panelsVisibleZIndex
            td number
            td 6000
            td CSS z-index property for panel
          tr
            th(colspan="4") Modals
          tr
            td modalTitle
            td string
            td 'Framework7'
            td Default title for modals (Alert, Confirm, Prompt)
          tr
            td modalButtonOk
            td string
            td 'OK'
            td Default text for modal's "OK" button
          tr
            td modalButtonCancel
            td string
            td 'Cancel'
            td Default text for modal's "Cancel" button
          tr
            td modalPreloaderTitle
            td string
            td 'Loading... '
            td Default text for preloader modal
          tr
            td modalCloseByOutside
            td boolean
            td false
            td Enable/disable ability to close modal (Alert, Confirm, Prompt) by clicking outside of modal (on modal's  overlay)
          tr
            td actionsCloseByOutside
            td boolean
            td true
            td The same as previous but for Action Sheet modal
          tr
            td popupCloseByOutside
            td boolean
            td true
            td The same as previous but for Popup modal
          tr
            td modalTemplate
            td string
            td Look below*
            td Full HTML template for modals (like alert, confirm and prompt)
          tr
            td modalActionsTemplate
            td string
            td '&lt;div class="actions-modal"&gt;{{buttons}}&lt;/div&gt;'
            td HTML template for Action Sheet. Could be useful if you want to add some custom elements to Action Sheet layout.
          tr
            td modalUsernamePlaceholder
            td string
            td 'Username'
            td Place holder text for username input in Login Modal
          tr
            td modalPasswordPlaceholder
            td string
            td 'Password'
            td Place holder text for password input in Login and Password Modals
          
          tr
            th(colspan="4") Smart Select
          tr
            td smartSelectBackTemplate
            td string
            td '&lt;div class="left sliding"&gt;&lt;a href="#" class="back link"&gt;&lt;i class="icon icon-back"&gt;&lt;/i&gt;&lt;span&gt;{{backText}}&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;'
            td Smart select page navbar back link HTML template
          tr
            td smartSelectBackText
            td string
            td 'Back'
            td Default back link text for Smart Select's page navbar
          tr
            td smartSelectSearchbar
            td boolean
            td false
            td Set to true if you want to enable Search Bar for all Smart Selects
          tr
            td smartSelectBackOnSelect
            td boolean
            td false
            td If enabled then smart select page will be automatically closed after user picks any option
          tr
            th(colspan="4") Search Bar
          tr
            td searchbarHideDividers
            td boolean
            td true
            td If enabled, then search will consider item dividers and group titles and hide them if there are no found items right after them
          tr
            td searchbarHideGroups
            td boolean
            td true
            td If enabled, then search will consider list view groups hide them if there are no found items inside of these groups
          tr
            th(colspan="4") Notifications
          tr
            td notificationTitle
            td string
            td undefined
            td Default title for all notifications
          tr
            td notificationSubtitle
            td string
            td undefined
            td Default subtitle for all notifications
          tr
            td notificationMedia
            td string
            td undefined
            td Default media (icon or image) for all notifications
          tr
            td notificationHold
            td number
            td undefined
            td Default hold duration (in ms) for all notifications
          tr
            td notificationCloseOnClick
            td boolean
            td false
            td Set to true if you want to close notification on click by default
          tr
            td notificationCloseIcon
            td boolean
            td true
            td Set to true if you want to display close icon (button) for notifications by default
          tr
            th(colspan="4") Status Bar
          tr
            td statusbarOverlay
            td boolean
            td undefined
            td With this option you can overwrite automatic <a href="status-bar.html">status bar detection</a>
          tr
            th(colspan="4") Page Callbacks
          tr
            td onPageBeforeInit
            td function(app, page)
            td -
            td Callback function that will be executed when Framework7 just inserts new page to DOM. Do the same as "pageBeforeInit" <a href="pages.html#page-events">page event</a>
          tr
            td onPageInit
            td function(app, page)
            td -
            td Callback function that will be executed when Framework7 initialize required page's components and navbar. Do the same as "pageInit" <a href="pages.html#page-events">page event</a>
          tr
            td onPageBeforeAnimation
            td function(app, page)
            td -
            td Callback function that will be executed when everything initialized and page (and navbar) is ready to be animated. Do the same as "pageBeforeAnimation" <a href="pages.html#page-events">page event</a>
          tr
            td onPageAfterAnimation
            td function(app, page)
            td -
            td Callback function that will be executed after page (and navbar) animation. Do the same as "pageAfterAnimation" <a href="pages.html#page-events">page event</a>
          tr
            td onPageBeforeRemove
            td function(app, page)
            td -
            td Callback function that will be executed right before page will be removed from DOM. Do the same as "pageBeforeRemove" <a href="pages.html#page-events">page event</a>
          tr
            th(colspan="4") Ajax Callbacks
          tr
            td onAjaxStart
            td function(xhr)
            td -
            td Callback function that will be executed in the beginning of Ajax request. This function accepts xhr data as an argument.
          tr
            td onAjaxComplete
            td function(xhr)
            td -
            td Callback function that will be executed after Ajax request. This function accepts xhr data as an argument.
          tr
            td preprocess
            td function(content, url, next)
            td -
            td This callback function allows you to modify loaded Ajax content right before it will be injected to DOM. As arguments this function receive "content" and "url" of the loaded page and "next" callback function. This option will be very useful if you are going to use some client-side template engine like "Handlebars", "Mustache", etc. After you modify content within this function you should return it: <code>return content</code>
          tr
            th(colspan="4") Namespace
              p
                strong Attention! If you change following class names you will also need to change them in CSS!
          tr
            td viewClass
            td string
            td 'view'
            td Class name for your View element
          tr
            td viewMainClass
            td string
            td 'view-main'
            td Class name for your Main View element
          tr
            td viewsClass
            td string
            td 'views'
            td Class name for your Views element
          
          tr
            th(colspan="4") Init
          tr
            td init
            td boolean
            td true
            td By default Framework7 will be initialized automatically when you call <code>new Framework7()</code>. If you want to prevent this behavior you can disable it with this option and then initialize it manually with <code>myApp.init()</code> when you need it.
      p
        | * <strong>modalTemplate</strong> parameter contains full HTML layout for modals (like alert, confirm and prompt):</p>
      pre
        code.
          '&lt;div class="modal {{noButtons}}"&gt;' +
            '&lt;div class="modal-inner"&gt;' +
                '{{if title}}&lt;div class="modal-title"&gt;{{title}}&lt;/div&gt;{{/if title}}' +
                '&lt;div class="modal-text"&gt;{{text}}&lt;/div&gt;' +
                '{{afterText}}' +
            '&lt;/div&gt;' +
            '&lt;div class="modal-buttons"&gt;{{buttons}}&lt;/div&gt;' +
        '&lt;/div&gt;'
      p 最终你写在 <code>my-app.js</code> 中的代码可能会是这样的：
      pre
        code.
          var myApp = new Framework7({
              // Default title for modals
              modalTitle: 'My App',

              // If it is webapp, we can enable hash navigation:
              pushState: true,

              // Hide and show indicator during ajax requests
              onAjaxStart: function (xhr) {
                  myApp.showIndicator();
              },
              onAjaxComplete: function (xhr) {
                  myApp.hideIndicator();
              }
          });
      h2 预处理内容
      p Framework 可以让你用自己喜欢的客户端模板引擎，比如Handlebars 或者 mustache 等。
      p 下面看看如何在初始化应用的时候就使用 Handlebars 作为我们的客户端模板引擎。（你需要先在页面中引入 Handlerbars）
      pre
        code.
          var myApp = new Framework7({
              preprocess: function (content, url, next) {
                  if (url === 'people.html') {
                      var template = Handlebars.compile(content);
                      var resultContent = template({
                          title: 'People',
                          people: ['John', 'Ivan', 'Mary']
                      })
                      return resultContent;
                  }
              }
          });
      p <code>people.html</code> 内容如下:
      pre
        code.
          &lt;div class="navbar"&gt;
            &lt;div class="navbar-inner"&gt;
              &lt;div class="center"&gt;{{title}}&lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="pages"&gt;
            &lt;div data-page="people" class="page"&gt;
              &lt;div class="page-content"&gt;
                &lt;ul&gt;
                  {{#each people}}
                  &lt;li&gt;{{this}}&lt;/li&gt;
                  {{/each}}
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
      p 有时候你会在预处理方法中有一些异步的逻辑，比如你用ajax来加载页面。这种情况下，我们提供了 "next" 回调函数，用来传入我们编译或者修改后的内容：
      pre
        code.
          var myApp = new Framework7({
              preprocess: function (content, url, next) {
                  if (url === 'people.html') {
                      // For example, we will retreive template JSON data using Ajax and only after that we will continue page loading process
                      $$.get('sometemplate.html', function(data) {
                          // Template
                          var template = Handlebars.compile(content);

                          // Compile content template with received JSON data
                          var resultContent = template(data);

                          // Now we call "next" callback function with result content
                          next(resultContent);
                      });
                      // Now we shouldn't return anything
                  }
              }
          });
      h2 下一步
      p 完成应用初始化之后，我们下一步需要做的是完成视图（Views）的初始化。
