extends ../jade/_internal-template

block vars
  - var activeLink = 'docs';
  - var title = 'Form Storage | Framework7 Documentation';

block content
  .docs-demo-device
    iframe(width="320", height="548", frameborder="0", scrolling="on")
    .fade-overlay
  .docs-wrap
    .docs-nav
      include ../jade/_docs-menu
    .docs-content.with-device
      div.full-width
        h1 表单存储(form storage)
        p Framework7 可以很方便存储和解析表单的数据，特别是在 Ajax 加载的页面。并且，当你再次加载相同的页面之后，Framework7 可以自动帮你填充上次的内容!
      h2(data-device-preview="../docs-demos/form-storage.html") 启用表单自动存储
      p 要启用表单自动存储功能，只需要：
      ul
        li 在表单上增加一个 "store-data" class
        li 在表单上增加一个 id 属性。如果没有 id, 无法正常工作的。
        li 确保你的input都有 "name" 属性，没有name属性的input将会被忽略
      p <strong>不需要任何JS代码就可以实现表单自动存储</strong>
      pre
        code.
          &lt;!-- Form has additional "store-data" class to enable form storage on this form --&gt;
          &lt;form id="my-form" class="list-block store-data"&gt;
            &lt;ul&gt;
              &lt;li&gt;
                &lt;div class="item-content"&gt;
                  &lt;div class="item-inner"&gt;
                    &lt;div class="item-title label"&gt;Name&lt;/div&gt;
                    &lt;div class="item-input"&gt;
                      &lt;!-- Make sure that input have "name attrobute" --&gt;
                      &lt;input type="text" name="name" placeholder="Your name"&gt;
                    &lt;/div&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;div class="item-content"&gt;
                  &lt;div class="item-inner"&gt;
                    &lt;div class="item-title label"&gt;E-mail&lt;/div&gt;
                    &lt;div class="item-input"&gt;
                      &lt;!-- Make sure that input have "name attrobute" --&gt;
                      &lt;input type="email" name="email" placeholder="E-mail"&gt;
                    &lt;/div&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/li&gt;
              ... other form fields ...
            &lt;/ul&gt;
          &lt;/form&gt;
      h2(data-device-preview="../docs-demos/form-storage-api.html") JS API
      p 这是怎么实现的？其实非常简单，Framework7 会在表单有任何改动的时候调用 <a href="form-data.html#form-to-json">formToJSON</a>，然后在"pageInit" 事件触发时调用 <a href="form-data.html#form-from-json">formFromJSON</a>。
      p 所有的表单数据都存储在 localStorage 中，每一个表单都有一个自己的key，key的规则是：<code>localStorage.f7form-[formID]</code>，其中 [formId] 就是表单的 id 属性。每一个这样的key都包含了一个表单的所有数据。
      p 下面是一些管理表单数据的可用的方法
      div.method-wrap
        p <span class="method">myApp.formGetData(<span>formId</span>) </span><span>- 获取id对应的表单的数据</span>
        ul.method-parameters
          li <span class="parameter">formId</span> - <span class="parameter-type">字符串</span> - form 的id
          li.method-returns 返回一个JSON数据
      div.method-wrap
        p <span class="method">myApp.formDeleteData(<span>formId</span>) </span><span>- 删除id对应的表单数据</span>
        ul.method-parameters
          li <span class="parameter">formId</span> - <span class="parameter-type">字符串</span> - form 对应的id
      div.method-wrap
        p <span class="method">myApp.formStoreData(<span>formId</span>, <span>formJSON</span>)</span><span> - store <b>formJSON</b> data for form with <b>formId</b> "id" attribute</span>
        p <span class="method">myApp.formStoreData(<span>formId</span>, <span>formJSON</span>)</span><span> - 把一个JSON数据存储到一个表单对应的localStorage中</span>
        ul.method-parameters
          li <span class="parameter">formId</span> - <span class="parameter-type">字符串</span> - 表单的id属性</li>
          li <span class="parameter">formJSON</span> - <span class="parameter-type">对象</span> - 要存储的JSON对象</li>
      pre
        code.
          &lt;form id="my-form2" class="list-block store-data"&gt;
            ... form fields ...
          &lt;/form&gt;
          &lt;div class="content-block"&gt;
            &lt;p&gt;&lt;a href="#" class="button get-storage-data"&gt;Get Data&lt;/a&gt;&lt;/p&gt;
            &lt;p&gt;&lt;a href="#" class="button delete-storage-data"&gt;Delete Data&lt;/a&gt;&lt;/p&gt;
            &lt;p&gt;&lt;a href="#" class="button save-storage-data"&gt;Save Data&lt;/a&gt;&lt;/p&gt;
          &lt;/div&gt;
      pre
        code.
          var myApp = new Framework7();  

          var $$ = Framework7.$;

          $$('.get-storage-data').on('click', function() {
            var storedData = myApp.formGetData('my-form2');
            if(storedData) {
              alert(JSON.stringify(storedData));
            }
            else {
              alert('There is no stored data for this form yet. Try to change any field')
            }
          });

          $$('.delete-storage-data').on('click', function() {
            var storedData = myApp.formDeleteData('my-form2');
            alert('Form data deleted')
          });

          $$('.save-storage-data').on('click', function() {
            var storedData = myApp.formStoreData('my-form2', {
              'name': 'John',
              'email': 'john@doe.com',
              'gender': 'female',
              'switch': ['yes'],
              'slider': 10
            });
            alert('Form data replaced, refresh browser to see changes')
          });
